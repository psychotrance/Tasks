package Lesson1_8;

/**
 * Вычислить и записать в массив первые 10 простых чисел.
 * Простое число – положительное целое число,
 * которое делится без остатка лишь на себя и на 1.
 * 1 не является простым числом.
 * Вывести в консоль сумму всех элементов полученного массива.
 */
public class PrimeNum1 {
    public static void main(String[] args) {
        int[] array = new int[10];
        int num = 0;

        for (int index = 0; index < array.length; index++) {
            int addingValue = index == 1 ? 1 : 2;
            num += addingValue;
            //fixme: index < 1 ?
            //Всё правильно, если index != 1 (в данном случае 0)
            //То addingValue = 2;
            //Индексы массива начинаются с Нуля, так же, как и Поиск Простых чисел
            //Но это так именно в моём решении
            //Или ты имеешь ввиду, что это тоже избыточно?
            if (index == 0 || index == 1) {
                array[index] = num;
                System.out.println(array[index]);
                //fixme: DONE. избыточный else. Программа и так сюда не дойдет, если зайдет в if выше
                //здесь без else нет возможности сделать код
                //Ну, я пока что не вижу способа:)
            } else {
                boolean isPrime = false;
                while (!isPrime) {
                    //fixme: DONE. я бы лучше юзал Math.sqrt(num). Суть та же, но логика будто бы прозрачнее
                    //здес уже делители беру из предыдущих значений Массива
                    // по этому не актуально
                    for (int j = index - 1; j > 0; j--) {
                        //fixme: DONE. тернаркой было бы лаконичнее
                        //опять же, другой код, здесь тернарку некуда сунуть
                        //Ну, я этого тоже не вижу, пока что
                        if (num % array[j] == 0) {
                            num += addingValue;
                            //FIXME: здесь нужна твоя помощь: Почему есть ставлю break, результат меняется на неправильный???
                            continue;
                        }
                        isPrime = true;
                    }
                }
                array[index] = num;
            }
        }
        int result = 0;
        for (int n : array) {
            System.out.println(n);
            result += n;
        }
        System.out.println(result);
    }
}

/*
код переделал примерно под это же задание, которое я сделал
через рекурсивные методы.
то есть весь поиск простых чисел начинается с 0
и отдельным значением идет до конца программы
 */